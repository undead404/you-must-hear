{
  "name": "Generate list",
  "nodes": [
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2240,
        -1008
      ],
      "id": "0989d3d5-49a8-4798-aa37-f3f927c7e00b",
      "name": "Merge",
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Tag",
          "mode": "list",
          "cachedResultName": "Tag"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "listCheckedAt": "={{ $now }}",
            "name": "={{ $('Begin').item.json.tagName }}",
            "listUpdatedAt": "={{null}}"
          },
          "matchingColumns": [
            "name"
          ],
          "schema": [
            {
              "id": "albumsScrapedAt",
              "displayName": "albumsScrapedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "listCheckedAt",
              "displayName": "listCheckedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "listUpdatedAt",
              "displayName": "listUpdatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "registeredAt",
              "displayName": "registeredAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1792,
        -816
      ],
      "id": "7c1ce233-c72d-4fab-86ef-53442a249167",
      "name": "Save empty result",
      "credentials": {
        "postgres": {
          "id": "scR9f4uyXxBIx9HD",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2240,
        -576
      ],
      "id": "f56f3c39-e0e2-48eb-b6ff-7142a281b759",
      "name": "Merge2",
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "993c3088-6a8e-4597-8592-a4b8c6e5d192",
              "leftValue": "={{ $json.count_weight }}",
              "rightValue": 100,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1568,
        -592
      ],
      "id": "a1bdf0eb-3abd-465b-8f6c-a192290db614",
      "name": "If too few albums",
      "executeOnce": true
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "TagListItem",
          "mode": "list",
          "cachedResultName": "TagListItem"
        },
        "limit": 100,
        "where": {
          "values": [
            {
              "column": "tagName",
              "value": "={{ $('Begin').item.json.tagName }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "place"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1792,
        -624
      ],
      "id": "629fb0ee-e806-4184-a42d-7738ab5def41",
      "name": "Get old list",
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "scR9f4uyXxBIx9HD",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *,\n  (ROW_NUMBER() OVER (ORDER BY \"weight\"))::INT AS \"place\"\n  FROM\n  (SELECT *,\n      (COALESCE(\"Album\".\"playcount\", 0)::FLOAT / COALESCE(CASE WHEN \"Album\".\"numberOfTracks\" = 0 THEN 1 ELSE \"Album\".\"numberOfTracks\" END, (\n        SELECT AVG(\"numberOfTracks\") FROM \"Album\" WHERE \"numberOfTracks\" IS NOT NULL\n      )) *\n      COALESCE(\"Album\".\"listeners\", 0) / COALESCE(CASE WHEN \"Album\".\"numberOfTracks\" = 0 THEN 1 ELSE \"Album\".\"numberOfTracks\" END, (\n        SELECT AVG(\"numberOfTracks\") FROM \"Album\" WHERE \"numberOfTracks\" IS NOT NULL\n      ))) *\n      POWER(\"AlbumTag\".\"count\"::FLOAT / 100, 3)\n      AS \"weight\"\n    FROM \"AlbumTag\"\n    JOIN \"Album\"\n    ON \"Album\".\"artist\" = \"AlbumTag\".\"albumArtist\" AND\n      \"Album\".\"name\" = \"AlbumTag\".\"albumName\"\n    WHERE \"Album\".\"hidden\" <> true AND\n      \"AlbumTag\".\"count\" > 0 AND\n      \"AlbumTag\".\"tagName\" = '{{ $json.tagName }}'\n    ORDER BY \"weight\" DESC\n    LIMIT 100) as X",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1120,
        -272
      ],
      "id": "a5ed0b04-105e-4e2f-b496-42302414af7d",
      "name": "Generate new list",
      "executeOnce": false,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "scR9f4uyXxBIx9HD",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c12df1ee-76a0-4be8-9fe3-34be54eb87d2",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2016,
        -704
      ],
      "id": "ca435550-b976-4d0e-9bc7-29b0601631c5",
      "name": "If has old list"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "TagListItem",
          "mode": "list",
          "cachedResultName": "TagListItem"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "albumArtist": "={{ $json.albumArtist }}",
            "albumName": "={{ $json.albumName }}",
            "place": "={{ $itemIndex + 1 }}",
            "tagName": "={{ $json.tagName }}",
            "updatedAt": "={{ $now }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "albumArtist",
              "displayName": "albumArtist",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "albumName",
              "displayName": "albumName",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "place",
              "displayName": "place",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "tagName",
              "displayName": "tagName",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "updatedAt",
              "displayName": "updatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        2464,
        -816
      ],
      "id": "28b92413-40e2-4149-9f32-7059507fd91d",
      "name": "Save fresh list",
      "credentials": {
        "postgres": {
          "id": "scR9f4uyXxBIx9HD",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Tag",
          "mode": "list",
          "cachedResultName": "Tag"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $('Begin').item.json.tagName }}",
            "listCheckedAt": "={{ $now }}",
            "listUpdatedAt": "={{ $now }}"
          },
          "matchingColumns": [
            "name"
          ],
          "schema": [
            {
              "id": "albumsScrapedAt",
              "displayName": "albumsScrapedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "listCheckedAt",
              "displayName": "listCheckedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "listUpdatedAt",
              "displayName": "listUpdatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "registeredAt",
              "displayName": "registeredAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4032,
        -720
      ],
      "id": "68203643-3bb7-4f05-a77f-1dd9c2960127",
      "name": "Save success",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "scR9f4uyXxBIx9HD",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "albumArtist",
              "field2": "=albumArtist"
            },
            {
              "field1": "albumName",
              "field2": "albumName"
            }
          ]
        },
        "resolve": "preferInput2",
        "options": {
          "skipFields": "updatedAt, artist, cover, date, duration, hidden, listeners, mbid, numberOfTracks, playcount, registeredAt, statsUpdatedAt, tagsUpdatedAt, thumbnail, weight, name"
        }
      },
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        2464,
        -432
      ],
      "id": "e72c36ef-375b-4d53-b22b-f028243c8cdd",
      "name": "Compare Datasets"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3136,
        -512
      ],
      "id": "59b75b67-7878-4d70-a4ad-170b46fcedc2",
      "name": "Merge4",
      "executeOnce": false
    },
    {
      "parameters": {
        "jsCode": "const midIndex = $input.all().length / 2;\n\nlet message = `Оновлення ${$input.first().json.tagName}\\n\\nВилучено:\\n`;\nlet cover;\n\nfor (let i = 0; i < midIndex; i += 1) {\n  if (i > 5 ) {\n    message += '\\n...та інші';\n    break;\n  }\n  const item = $input.all()[i].json;\n  message += `\\n- ${item.date || ''} ${item.albumArtist} - ${item.albumName}`;\n}\n\nmessage += '\\n\\nДодано:\\n';\n\nfor (let i = midIndex; i < $input.all().length; i += 1) {\n  if (i > midIndex + 5 ) {\n    message += '\\n...та інші';\n    break;\n  }\n  const item = $input.all()[i].json;\n  if (!cover) {\n    cover = item.cover;\n  }\n  message += `\\n- ${item.date || ''} ${item.artist} - ${item.name}`;\n}\n\nreturn {cover,message};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4032,
        -384
      ],
      "id": "23a7af3f-9d6a-46c3-994c-49252b2c65f1",
      "name": "Create message",
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "-1001699039876",
        "file": "={{ $json.cover }}",
        "additionalFields": {
          "caption": "={{ $json.message }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4480,
        -480
      ],
      "id": "dc3c572c-210e-463f-af7e-cef7182cb4a3",
      "name": "Send a photo message",
      "webhookId": "b901e225-aae0-4f90-b274-7e4aa36f926c",
      "credentials": {
        "telegramApi": {
          "id": "eGEk4dS2hDuvw99B",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let message = `Новий список – ${$input.first().json.tagName}`;\nlet cover;\n\nfor (let i = 0; i < $input.all().length; i += 1) {\n  const item = $input.all()[i].json;\n  if (!cover) {\n    cover = item.cover;\n  }\n}\n\nreturn {cover,message};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2912,
        -1008
      ],
      "id": "5ed37b30-de5c-4803-9b48-8f9647e6a43c",
      "name": "Create message1",
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "-1001699039876",
        "file": "={{ $json.cover }}",
        "additionalFields": {
          "caption": "={{ $json.message }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3136,
        -1008
      ],
      "id": "d4d91131-4698-4e92-9450-54d9b1d9254a",
      "name": "Send a photo message1",
      "webhookId": "b901e225-aae0-4f90-b274-7e4aa36f926c",
      "credentials": {
        "telegramApi": {
          "id": "eGEk4dS2hDuvw99B",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2688,
        -1024
      ],
      "id": "f99337a9-c913-43a0-b07b-b108db13c1a4",
      "name": "Merge3"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "=weight"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        1344,
        -592
      ],
      "id": "0d615c1b-9a3c-4079-9872-159f77496abd",
      "name": "Summarize"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "DjDCQ2YNGopdvYKq",
          "mode": "list",
          "cachedResultUrl": "/workflow/DjDCQ2YNGopdvYKq",
          "cachedResultName": "Enrich from Discogs"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "numberOfTracks": 0
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "albumName",
              "displayName": "albumName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "albumArtist",
              "displayName": "albumArtist",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "numberOfTracks",
              "displayName": "numberOfTracks",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        2464,
        -1008
      ],
      "id": "922eb447-f2ba-41e0-9755-31fb93082344",
      "name": "Call 'Enrich from Discogs'"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "tagName"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        688,
        -272
      ],
      "id": "4285f556-4d6d-40db-9fc0-1ffc441ef579",
      "name": "Begin"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "DjDCQ2YNGopdvYKq",
          "mode": "list",
          "cachedResultUrl": "/workflow/DjDCQ2YNGopdvYKq",
          "cachedResultName": "Enrich from Discogs"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "numberOfTracks": "={{ $json.numberOfTracks }}",
            "date": "={{ $json.date }}",
            "albumName": "={{ $json.albumName }}",
            "albumArtist": "={{ $json.albumArtist }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "albumName",
              "displayName": "albumName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "albumArtist",
              "displayName": "albumArtist",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "numberOfTracks",
              "displayName": "numberOfTracks",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        2736,
        -352
      ],
      "id": "707176ac-1658-4d61-9588-546876f6526e",
      "name": "Call 'Enrich from Discogs'1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "56cd8262-2981-4758-8982-f7f2eb3f951b",
              "name": "title",
              "value": "={{ $json.albumArtist }} - {{ $json.albumName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2704,
        -80
      ],
      "id": "30d5fbf5-b05e-47b0-8809-85454812172d",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "field": "title"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        2928,
        -48
      ],
      "id": "25d6ef56-9cb3-4acb-a72a-b7cd82b1140b",
      "name": "Summarize1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f0333326-7b98-43a3-a7a8-d26c8f2df884",
              "leftValue": "={{ $json.count_title }}",
              "rightValue": 100,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3136,
        -64
      ],
      "id": "c49e8ce1-e1b1-4672-9a6d-9fcb9a26b39a",
      "name": "If"
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3360,
        -144
      ],
      "id": "92b8a3f9-73d5-47d7-bd1f-5b99785b2b6f",
      "name": "Merge1"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "TagListItem",
          "mode": "list",
          "cachedResultName": "TagListItem"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "albumArtist": "={{ $json.albumArtist }}",
            "albumName": "={{ $json.albumName }}",
            "place": "={{ $json.place }}",
            "tagName": "={{ $json.tagName }}",
            "updatedAt": "={{ $now }}"
          },
          "matchingColumns": [
            "tagName",
            "place"
          ],
          "schema": [
            {
              "id": "albumArtist",
              "displayName": "albumArtist",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "albumName",
              "displayName": "albumName",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "place",
              "displayName": "place",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "tagName",
              "displayName": "tagName",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "updatedAt",
              "displayName": "updatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "queryBatching": "transaction"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3584,
        -144
      ],
      "id": "f74abff5-a2ab-4461-af84-47c11851f4de",
      "name": "Save renewed list",
      "credentials": {
        "postgres": {
          "id": "scR9f4uyXxBIx9HD",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "Tag",
          "mode": "list",
          "cachedResultName": "Tag"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $('Begin').item.json.tagName }}",
            "listCheckedAt": "={{ $now }}"
          },
          "matchingColumns": [
            "name"
          ],
          "schema": [
            {
              "id": "albumsScrapedAt",
              "displayName": "albumsScrapedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "listCheckedAt",
              "displayName": "listCheckedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "listUpdatedAt",
              "displayName": "listUpdatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "registeredAt",
              "displayName": "registeredAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3360,
        64
      ],
      "id": "5a932f5d-9836-459a-89ce-148671e175c6",
      "name": "Save no-update success",
      "credentials": {
        "postgres": {
          "id": "scR9f4uyXxBIx9HD",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3808,
        -432
      ],
      "id": "224dc453-dbad-4487-b566-60d49a3ffb61",
      "name": "Merge5"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2880,
        -240
      ],
      "id": "a1a9189b-8fe6-40a1-aed0-ab8edf1ad00a",
      "name": "Merge6"
    },
    {
      "parameters": {
        "mode": "chooseBranch",
        "useDataOfInput": 2
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1792,
        -48
      ],
      "id": "e6986d0b-5777-4a38-ade7-a2c306d71932",
      "name": "Merge7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f4b50cc0-ba97-4e22-83ec-63b027477a2b",
              "leftValue": "={{ $json.cover }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4256,
        -384
      ],
      "id": "f5892372-26e0-436a-bc18-2c78f46616b6",
      "name": "Has cover"
    },
    {
      "parameters": {
        "chatId": "-1001699039876",
        "text": "={{ $json.message }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        4480,
        -288
      ],
      "id": "953e0134-0fb5-4c63-8f00-b22d1aef08bd",
      "name": "Send a text message",
      "webhookId": "b901e225-aae0-4f90-b274-7e4aa36f926c",
      "credentials": {
        "telegramApi": {
          "id": "eGEk4dS2hDuvw99B",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "0JXZTPomOwz2sJee",
          "mode": "list",
          "cachedResultUrl": "/workflow/0JXZTPomOwz2sJee",
          "cachedResultName": "Maybe delete tag"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "tagName": "={{ $json.tagName }}"
          },
          "matchingColumns": [
            "tagName"
          ],
          "schema": [
            {
              "id": "tagName",
              "displayName": "tagName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        896,
        -272
      ],
      "id": "e2b12b04-e33d-4851-b18c-130ab0191b50",
      "name": "Call 'Maybe delete tag'"
    }
  ],
  "pinData": {
    "Begin": [
      {
        "json": {
          "tagName": "screamo"
        }
      }
    ]
  },
  "connections": {
    "Merge": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Call 'Enrich from Discogs'",
            "type": "main",
            "index": 0
          },
          {
            "node": "Save fresh list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Compare Datasets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If too few albums": {
      "main": [
        [
          {
            "node": "Save empty result",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get old list",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get old list": {
      "main": [
        [
          {
            "node": "If has old list",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Generate new list": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge7",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If has old list": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save fresh list": {
      "main": [
        [
          {
            "node": "Save success",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge3",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Compare Datasets": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call 'Enrich from Discogs'1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge6",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create message": {
      "main": [
        [
          {
            "node": "Has cover",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create message1": {
      "main": [
        [
          {
            "node": "Send a photo message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Create message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "If too few albums",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Begin": {
      "main": [
        [
          {
            "node": "Call 'Maybe delete tag'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'Enrich from Discogs'": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Call 'Enrich from Discogs'1": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Summarize1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Save no-update success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Save renewed list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save renewed list": {
      "main": [
        [
          {
            "node": "Merge5",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge5": {
      "main": [
        [
          {
            "node": "Create message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Save success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge6": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge7": {
      "main": [
        [
          {
            "node": "Compare Datasets",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Has cover": {
      "main": [
        [
          {
            "node": "Send a photo message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'Maybe delete tag'": {
      "main": [
        [
          {
            "node": "Generate new list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "availableInMCP": false,
    "errorWorkflow": "7HrDrsQKECTlnEFk"
  },
  "versionId": "506746da-02c3-48ae-ad36-a3589bbcfad0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1afc0d7b3b04f9ec037dfb276d1262005b9e3099e9cc2b8934e87deae4ed97ec"
  },
  "id": "8yEqxKAOkd9EsU7B",
  "tags": []
}